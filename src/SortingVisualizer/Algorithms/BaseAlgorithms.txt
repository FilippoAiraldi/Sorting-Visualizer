# BUBBLE SORT
let N = v.length;
let unsorted;
do {
    unsorted = false;
    for (let i = 1; i < N; ++i) {
        if (v[i - 1] > v[i]) {
            swap(v, i - 1, i);
            unsorted = true;
        }
    }
    N--;
}
while (unsorted);



# COCKTAIL SORT
let N = v.length;
let beginIdx = 0;
let endIdx = N - 2;
while (beginIdx <= endIdx) {
    let newBeginIdx = endIdx;
    let newEndIdx = beginIdx;
    for (let i = beginIdx; i <= endIdx; ++i) {
        if (v[i] > v[i + 1]) {
            swap(v, i, i + 1);
            newEndIdx = i;
        }
    }
    endIdx = newEndIdx - 1;
    for (let i = endIdx; i >= beginIdx; --i) {
        if (v[i] > v[i + 1]) {
            swap(v, i, i + 1);
            newBeginIdx = i;
        }
    }
    beginIdx = newBeginIdx - 1;
}



# SELECTION SORT
let N = v.length;
for (let i = 0; i < N - 1; ++i) {
    let minIdx = i;
    for (let j = i + 1; j < N; ++j) {
        minIdx = v[j] < v[minIdx] ? j : minIdx;

    }
    if (minIdx !== i) {
        swap(v, i, minIdx);
    }
}